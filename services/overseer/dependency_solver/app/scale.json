{
  "min": 1,
  "max": 10,
  "dependencies": {
    "require": [
    ],
    "provide": {
      "dependency_solver:rpc:solve_dependencies": 2,
      "dependency_solver:rpc:solve_dependencies:args": ["catalog", "extra_constraints"],
      "dependency_solver:rpc:solve_dependencies:rtype": ["list[dict]"],
      "dependency_solver:rpc:explain": 1,
      "dependency_solver:rpc:explain:args": ["catalog", "extra_constraints"],
      "dependency_solver:rpc:explain:rtype": ["results"]
    },
    "optional": [
    ]
  },
  "metric": [
  ],
  "envs": [
  ],
  "scale": {
    "resources": [
      {
        "name": "rmq",
        "monitorer": "monitorer_rabbitmq",
        "identifier": "rpc-overseer_dependency_solver"
      }
    ],
    "rules": [
      {
        "name": "latency_ok",
        "expression": "rmq:waiting == 0 or rmq:latency < 0.200"
      },
      {
        "name": "latency_fail",
        "expression": "rmq:latency > 15"
      },
      {
        "name": "panic",
        "expression": "rmq:latency > 10 or (rules:latency_fail and rules:latency_fail:since > \"25s\")"
      },
      {
        "name": "stable_latency",
        "expression": "rules:latency_ok and rules:latency_ok:since > \"30s\""
      }
    ],
    "scale_up": "rules:panic or (rmq:consumers == 0 and rmq:waiting > 0)",
    "scale_down": "rules:stable_latency and rmq:consumers > 0"
  }
}