{
  "min": 0,
  "max": 9,
  "dependencies": {
    "require": [
    ],
    "provide": {
      "producer:rpc:get": 1,
      "producer:rpc:get:args": [],
      "producer:rpc:get:rtype": ["int"],
      "producer:rpc:echo": 1,
      "producer:rpc:echo:args": ["*args", "**kwargs"],
      "producer:rpc:echo:rtype": ["args", "kwargs"],
      "producer:rpc:raises": 1,
      "producer:rpc:raises:args": ["message"],
      "producer:rpc:raises:rtype": []
    }

  },
  "scale": {
    "resources": [
      {
        "name": "rmq",
        "monitorer": "monitorer_rabbitmq",
        "identifier": "rpc-producer"
      }
    ],
    "rules": [
      {
        "name": "latency_ok",
        "expression": "rmq:waiting == 0 or rmq:latency < 0.200"
      },
      {
        "name": "latency_fail",
        "expression": "rmq:latency > 5"
      },
      {
        "name": "panic",
        "expression": "rmq:latency > 10 or (rules:latency_fail and rules:latency_fail:since > \"25s\")"
      },
      {
        "name": "stable_latency",
        "expression": "rules:latency_ok and rules:latency_ok:since > \"30s\""
      }
    ],
    "scale_up": "rules:panic or (rmq:consumers == 0 and rmq:waiting > 0) or not rmq:exists",
    "scale_down": "rules:stable_latency and rmq:consumers > 0"
  }
}